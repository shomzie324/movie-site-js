.popup{
    height: 100vh;
    width: 100%;
    position: fixed;
    top: 0;
    left: 0;
    background-color: rgba($color-black, .8);
    z-index: 9999;

    // this will be animated to bring the popup into view
    opacity: 0;
    visibility: hidden;
    transition: all .3s;

    &__content{
        @extend %absCenter;
        width: 75%;
        background-color: $colour-white;
        border-radius: 3px;
        box-shadow: $heavy-shadow-2;
        display: table;
        overflow: hidden;

        // this will be animated when the popup is clicked
        opacity: 0;
        transform: translate(-50%, -50%) scale(.25);
        // add .2s of delay for black box to come in
        transition: all .4s .2s;

        @include respond(tab-port){
            width: 90%;
        }
    }

    &__actions{
        display: flex;
        justify-content: space-evenly;
    }

    &__left{
        width: 40%;
        // table cells automatically make cells a table the same height
        display: table-cell;
        vertical-align: middle;
    }
    &__right{
        width: 60%;
        display: table-cell;
        // vertical align is a property of table cells
        vertical-align: middle;

        padding: 1rem 3rem;
    }
    &__img{
        display: block;
        width: 100% !important;
        height: 50%;
    }
    &__text{
        font-size: 1.4rem;
        margin-bottom: 3rem;

        // column organization somewhat new but can work in most modern browsers
        // auto prefixers can handle the extra lines
        -moz-column-count: 2;
        -moz-column-gap: 4rem;
        -moz-column-rule: 1px solid $color-grey-light-2;

        column-count: 2;
        column-gap: 4rem;
        column-rule: 1px solid $color-grey-light-2;

        // auto hyphenates long words, needs lots of prefixes to work
        -moz-hyphens: auto;
        -ms-hyphens: auto;
        -webkit-hyphens: auto;
        hyphens: auto;
    }

    // any anchor with this component's id as its href will trigger this target pseudo class
    // note: when the anchor target changes (e.g with a close btn) the pop up stops being the target
    // OPEN STATES
    &:target{
        opacity: 1;
        visibility: visible;
    }

    // add style to pop up content when the popup parent becomes the target
    &:target &__content{
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }
        // !OPEN STATES

    &__close{
        &:link,
        &:visited{
            color: $color-grey-dark;
            position: absolute;
            top: 2.5rem;
            right: 2.5rem;
            font-size: 3rem;
            text-decoration: none;
            display: inline-block;
            line-height: 1;
        }

        &:hover{
            color: $color-primary;
        }
    }
}

#ytplayer{
    width: 60rem;
    height: 52rem;
    padding: 0;
}